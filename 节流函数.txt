参考网站：
http://www.alloyteam.com/2012/11/javascript-throttle/
http://www.cnblogs.com/dolphinX/p/3403821.html

无限节流(自己胡乱造的)：
函数节流让一个函数只有在你不断触发后！！停下来歇会！！才开始执行，中间你操作得太快它直接无视你。
这样做就有点太绝了。resize一般还好，但假如你写一个拖拽元素位置的程序，然后直接使用函数节流，那恭喜你，
你会发现你拖动时元素是不动的，你拖完了，它直接闪到终点去。
其实函数节流的出发点，就是让一个函数不要执行得太频繁，减少一些过快的调用来节流。当你改变浏览器大小，
浏览器触发resize事件的时间间隔是多少？我不清楚，个人猜测是16ms（每秒64次），
反正跟mousemove一样非常太频繁，一个很小的时间段内必定执行，这是浏览器设好的，你无法直接改。
而真正的节流应该是在可接受的范围内尽量延长这个调用时间，也就是我们自己控制这个执行频率，
让函数减少调用以达到减少计算、提升性能的目的。假如原来是16ms执行一次，我们如果发现resize时每50ms一次也可以接受，
那肯定用50ms做时间间隔好一点。
而上面介绍的函数节流，它这个频率就不是50ms之类的，它就是！！！无穷大！！！！，只要你能不间断resize，
刷个几年它也一次都不执行处理函数。
有限节流(自己胡乱造的)：
在无限节流的基础上新加一个时间参数，在不断出发这事件的时候只要时间达到这个参数，就让函数执行一次